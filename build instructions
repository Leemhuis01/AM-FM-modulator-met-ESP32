
This sketch has been built with Arduino IDE 1.8.19. 

It should be no problem to use a newer version, however these
instructions are for the 1.8.19 version.

Step 1: Download the Arduino IDE software from:
        https://www.arduino.cc/en/software 
        (Scroll down on the page for 1.8.19)
 
Step 2: Open Arduino IDE and install the ESP32 packages:
        https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/
        (Remark: the few seconds they mentioned to install the
        package is actually a couple of minutes, so be patient)

Step 3: Download the sketch, and make sure the whole
        project is inside the directory ESP32-AM-FM-Modulator
        Open the directory and open project ESP32-AM-FM-Modulator.ino
        
Step 4: Select the target board with menu:
        Tools => Board "xxx" => ESP32 Arduino => ESP32 WROVER Module
        
Step 5: Select the needed partition scheme with menu:
        Tools => Partition Scheme "xxx" => Huge APP (...)
        
Step 6: Switch on both “Show verbose output” checkboxes in menu:
        File => Preferences => tab Settings
        (Building the sketch takes a long time, so it is useful
        to monitor the progress)

Step 7: Download the zip files of the needed libraries:
        https://github.com/schreibfaul1/ESP32-audioI2S/
        https://github.com/pschatzmann/ESP32-A2DP
        
Step 8: Add the downloaded libraries via menu:
        Sketch => Include Library => Add .ZIP library
        
Step 9: Add OneButton library via menu:
        Tools => Manage Libraries
        Search for and install OneButton
        
Step 10: Connect the USB cable to the ESP32 module and make sure that
         the PC recognizes it as a serial port. If not, install the
         drivers for the corresponding serial adapter, normally
         CP2102,r CH340C, or CH9102
         
Step 11: Choose the port of the ESP32 module via menu:
         Tools => Port
         
Step 12: To see the debug info, you can open a serial monitor:
         Tools => Serial Monitor
         And set the baud rate to 115200
         
Step 13: Compile and upload the sketch:
         Sketch => Upload (or press the (->) button)
         It will take a while to compile the whole sketch,
         so have a little patience...
         
Step 14: You can monitor the messages from the sketch in the serial
         monitor, as long as the USB cable is connected. In addition,
         you can query some information by sending some simple commands.
         Send a ? to get a list of the commands.
         
Remark: I needed to update a someting in the program, because some of
the libraries were not compatible anymore with my libraries. (I hadn't
updated mine for al long time.) So, please report if you encounter any problems with the libraries. 

